plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.adarshr.test-logger' version '4.0.0'
    id 'jacoco'
    id "org.openapi.generator" version "7.2.0"
}

group = 'edu.stanford.slac'
version = '1.0.0'

ext {
    ad_eed_baselib_version = "0.1.85"
    ad_eed_base_mongodb_lib_version = "1.0.9"
    javaSourceCompatibility = JavaVersion.VERSION_21
    javaTargetCompatibility = JavaVersion.VERSION_21
}

java {
    sourceCompatibility = javaSourceCompatibility
    targetCompatibility = javaTargetCompatibility
}

springBoot {
    buildInfo {
        {
            properties {
                additional = [
                        'ad-eed-baselib'     : "${project.ext.ad_eed_baselib_version}",
                        'ad-eed-base-mongodb': "${project.ext.ad_eed_base_mongodb_lib_version}"
                ]
            }
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/eed-web-application/slac-ad-eed-baselib")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GH_USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("GH_TOKEN")
        }
    }
    maven {
        url = uri("https://maven.pkg.github.com/eed-web-application/slac-ad-eed-base-mongodb-lib")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GH_USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("GH_TOKEN")
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-security',
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.boot:spring-boot-starter-data-ldap',
            'org.springframework.boot:spring-boot-starter-cache',
            'org.springframework.boot:spring-boot-starter-validation',
            'io.micrometer:micrometer-registry-prometheus',
            'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0',
            'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0',
            'javax.annotation:javax.annotation-api:1.3.2',
            'io.swagger.core.v3:swagger-annotations:2.2.22',
            'org.mapstruct:mapstruct:1.5.5.Final',
//            'com.github.javafaker:javafaker:1.0.2',
            'com.fasterxml.jackson.core:jackson-databind',
            'org.springframework.kafka:spring-kafka:3.1.4',
            'net.coobird:thumbnailator:0.4.20',
            'software.amazon.awssdk:s3:2.25.27',
            'io.jsonwebtoken:jjwt-root:0.12.5',
            'io.jsonwebtoken:jjwt-api:0.12.3',
            'io.jsonwebtoken:jjwt-impl:0.12.6',
            'io.jsonwebtoken:jjwt-jackson:0.12.5',
            'io.jsonwebtoken:jjwt-extensions:0.12.6',
            'com.unboundid:unboundid-ldapsdk:7.0.1'

    // jipp for IPP printer
    implementation 'com.hp.jipp:jipp-core:0.7.16'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '2.2'
    implementation 'org.apache.pdfbox:pdfbox:3.0.3'

    // tika
    implementation 'org.overviewproject:mime-types:2.0.0'
    implementation 'org.apache.tika:tika-core:2.9.2'
    implementation 'org.apache.tika:tika-parsers-standard-package:2.9.2'

    //ollama
    implementation 'io.github.ollama4j:ollama4j:1.0.79'

    //eed library
    implementation "edu.stanford.slac:slac-ad-eed-baselib:$project.ext.ad_eed_baselib_version",
            "edu.stanford.slac:slac-ad-eed-base-mongodb-lib:$project.ext.ad_eed_base_mongodb_lib_version"

    // hazelcast
    implementation 'com.hazelcast:hazelcast-spring:5.3.8'

    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // JSOUP
    implementation 'org.jsoup:jsoup:1.18.1'

    // mongock
    implementation 'io.mongock:mongock-bom:5.4.4',
            'io.mongock:mongock-springboot-v3:5.4.1',
            'io.mongock:mongodb-springdata-v4-driver:5.4.4'
    testImplementation 'org.projectlombok:lombok:1.18.34'

    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0'
    testCompileOnly('org.springframework.security:spring-security-test')
    testImplementation('org.springframework.kafka:spring-kafka-test:3.2.0')
    testImplementation 'org.springframework.boot:spring-boot-starter-test',
            'org.springframework.security:spring-security-test',
            'org.springframework.ldap:spring-ldap-test',
            'org.awaitility:awaitility:4.2.1',
            'org.apache.pdfbox:pdfbox:3.0.3'

}

tasks.named('test') {
    useJUnitPlatform()
}

jacoco {
    reportsDirectory = layout.buildDirectory.dir('coverage')
}

test {
    // Optionally, set environment variables if needed
//    systemProperty 'java.library.path', '/path/to/jmagick/lib'

    finalizedBy jacocoTestReport // report is always generated after tests run
    exclude '**/dto/**'
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
        csv.required = true
        html.required = true
    }
}

testlogger {
    theme 'standard'
    showExceptions true
    showStackTraces true
    showFullStackTraces true
    showCauses true
    slowThreshold 2000
    showSummary true
    showSimpleNames false
    showPassed true
    showSkipped true
    showFailed true
    showOnlySlow false
//    showStandardStreams true
    showPassedStandardStreams false
    showSkippedStandardStreams false
    showFailedStandardStreams true
    logLevel 'lifecycle'
}
