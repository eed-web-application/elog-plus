logging:
  level:
    edu.stanford.slac.elog_plus: DEBUG
    org.springdoc: debug

server:
  tomcat:
    mbeanregistry:
      enabled: true

spring:
  application:
    name: 'elog-plus'
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://elogs:elogs@localhost:27017/elogs?authSource=elogs}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP:localhost:9094}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: ${ELOG_PLUS_CONSUMER_GROUP_ID:random.uuid}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
  servlet:
    multipart:
      max-file-size: 100MB
      enabled: true
      file-size-threshold: 1MB


edu:
  stanford:
    slac:
      elogs-plus:
        image-preview-topic: ${ELOG_PLUS_IMAGE_PREVIEW_TOPIC:elog-plus-preview-creation}
        minio:
          url: ${MINIO_URL:http://${MINIO_HOST:localhost}:9000}
          key: ${MINIO_KEY:minio}
          secret: ${MINIO_SECRET:minio123}
          bucket: ${MINIO_BUCKET_NAME:elog}

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  metrics:
    tags:
      application: ${spring.application.name}

# swagger-ui custom path
springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /api-docs

mongock:
  migration-scan-package:
    - edu.stanford.slac.elog_plus.migration
  throw-exception-if-cannot-obtain-lock: true #Default true
  track-ignored: false #Default true
  transaction-enabled: false
  runner-type: applicationrunner
  enabled: true #Default true